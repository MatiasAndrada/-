---
import Layout from "../../layouts/Layout.astro";
import { type Core } from "../../types/api/api-core";

interface Props {
  core: Core;
}

const { core } = Astro.props;

const getStatusColor = (status) => {
  switch (status) {
    case "active":
      return "text-green-500";
    case "expended":
      return "text-red-500";
    case "inactive":
      return "text-yellow-300";
    case "lost":
      return "text-orange-500"; // Puedes asignar otro color si lo deseas
    default:
      return "text-slate-300";
  }
};
---

<Layout title={`Core ${core?.serial}`}>
  <div
    class="p-4 mx-auto border border-gray-300 rounded-md shadow-md bg-dark text-slate-300"
  >
    <h2 class="text-5xl text-center font-semibold ml-6 text-white">
      Core <span class="text-slate-300">{core.serial}</span>
    </h2>
    <div
      class="min-w-full flex flex-col sm:flex-row items-start gap-6 justify-around my-4"
    >
      <div class="w-full sm:w-1/3 text-center sm:text-start">
        <h3
          class="text-xl md:text-2xl text-center font-semibold text-white mb-2"
        >
          Information:
        </h3>
        <ul class="text-slate-300 list-disc pl-4 text-center list-inside">
          <li>
            Status:{" "}
            <span class={`font-semibold ${getStatusColor(core.status)}`}>
              {core.status}
            </span>
          </li>
          <li>
            Last Update:{" "}
            <span class={`text-white`}>
              {core.last_update || "N/A"}
            </span>
          </li>
          <li>
            Reuse Count:{" "}
            <span class={`text-white`}>
              {core.reuse_count}
            </span>
          </li>
          <li>
            Block:{" "}
            <span class={`text-white`}>
              {core.block || "N/A"}
            </span>
          </li>
        </ul>
      </div>
      <div class="w-full sm:w-2/3 text-center sm:text-start">
        <h3
          class="text-xl md:text-2xl text-center font-semibold text-white mb-2"
        >
          Additional Information:
        </h3>
        <ul class="text-slate-300 list-disc pl-4 text-center list-inside">
          <li>
            Return to Launch Site Attempts:{" "}
            <span class={`text-white`}>
              {core.rtls_attempts}
            </span>
          </li>
          <li>
            Return to Launch Site Landings:{" "}
            <span class={`text-white`}>
              {core.rtls_landings}
            </span>
          </li>
          <li>
            Autonomous Spaceport Drone Ship Attempts:{" "}
            <span class={`text-white`}>
              {core.asds_attempts}
            </span>
          </li>
          <li>
            Autonomous Spaceport Drone Ship Landings:{" "}
            <span class={`text-white`}>
              {core.asds_landings}
            </span>
          </li>
          <li>
            Launches:{" "}
            <span class={`text-white`}>
              {
                core.launches.map
                  ? core.launches.map((launch) => (
                      <a class="underline" href={`/launches/${launch}`}>
                        {launch}
                      </a>
                    ))
                  : "N/A"
              }
            </span>
          </li>
        </ul>
      </div>
    </div>
  </div>
</Layout>
