---
import Link from "../ui/Link.astro";
import { Status, type Core } from "../../types/api/api-core";

interface Props {
  core: Core;
}

const { core } = Astro.props;

const getStatusColor = (status: Status) => {
  if (status === Status.Active) {
    return "text-green-500";
  } else if (status === Status.Expended) {
    return "text-red-500";
  } else if (status === Status.Inactive) {
    return "text-yellow-300";
  } else if (status === Status.Lost) {
    return "text-orange-500";
  } else {
    return "text-slate-200";
  }
};
---

<div
  class="p-4 border border-t-0 border-gray-300 rounded-md shadow-md bg-dark text-white"
>
  <div
    class="min-w-full flex flex-col sm:flex-row items-start gap-6 justify-around my-4"
  >
    <div class="w-full sm:w-1/3 text-center sm:text-start">
      <h3 class="text-xl md:text-2xl text-center font-semibold text-white mb-2">
        Information:
      </h3>
      <ul class="list-disc pl-4 text-center list-inside">
        <li>
          Status:{" "}
          <span class={`font-semibold ${getStatusColor(core.status)}`}>
            {core.status}
          </span>
        </li>
        <li>
          Last Update:{" "}
          <span class={`text-slate-200`}>
            {core.last_update || "N/A"}
          </span>
        </li>
        <li>
          Reuse Count:{" "}
          <span class={`text-slate-200`}>
            {core.reuse_count}
          </span>
        </li>
        <li>
          Block:{" "}
          <span class={`text-slate-200`}>
            {core.block || "N/A"}
          </span>
        </li>
      </ul>
    </div>
    <div class="w-full sm:w-2/3 text-center sm:text-start">
      <h3 class="text-xl md:text-2xl text-center font-semibold mb-2">
        Additional Information:
      </h3>
      <ul class="list-disc pl-4 text-center list-inside">
        <li>
          Return to Launch Site Attempts:{" "}
          <span class={`text-slate-200`}>
            {core.rtls_attempts}
          </span>
        </li>
        <li>
          Return to Launch Site Landings:{" "}
          <span class={`text-slate-200`}>
            {core.rtls_landings}
          </span>
        </li>
        <li>
          Autonomous Spaceport Drone Ship Attempts:{" "}
          <span class={`text-slate-200`}>
            {core.asds_attempts}
          </span>
        </li>
        <li>
          Autonomous Spaceport Drone Ship Landings:{" "}
          <span class={`text-slate-200`}>
            {core.asds_landings}
          </span>
        </li>

        Launches:{" "}
        <span class={`text-slate-200`}>
          {
            core.launches.map
              ? core.launches.map((launch) => (
                  <Link to={`/launches/${launch}`} self={true}>
                    {launch}
                  </Link>
                ))
              : "N/A"
          }
        </span>
      </ul>
    </div>
  </div>
</div>
