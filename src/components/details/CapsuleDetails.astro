---
import Layout from "../../layouts/Layout.astro";
import Link from "../ui/Link.astro";
import { type Capsule, Status } from "../../types/api/api-capsule";

interface Props {
  capsule: Capsule;
}

const { capsule } = Astro.props;

const getStatusColor = (status) => {
  switch (status) {
    case status === Status.Active:
      return "text-green-500";
    case "destroyed" === Status.Destroyed:
      return "text-red-500";
    case status === Status.Retired:
      return "text-yellow-500";
    case status === Status.Unknown:
      return "text-orange-500";
    default:
      return "text-slate-200";
  }
};
---

<Layout title={`capsule ${capsule?.serial}`}>
  <div
    class="p-4 border border-t-0 border-gray-300 rounded-md shadow-md bg-dark text-white"
  >
    <div
      class="min-w-full flex flex-col sm:flex-row items-center gap-6 justify-around my-4"
    >
      <div class="md:ml-6 text-center sm:text-start">
        <h3 class="text-xl md:text-2xl text-center font-semibold mb-2">
          Information:
        </h3>
        <ul class="list-disc text-center list-inside">
          <li>
            Status:{" "}
            <span class={`font-semibold ${getStatusColor(capsule.status)}`}>
              {capsule.status}
            </span>
          </li>
          <li>
            Last update :{" "}
            <span class={`text-slate-200`}>
              {capsule.last_update || "N/A"}
            </span>
          </li>
          <li>
            Reuse Count:{" "}
            <span class={`text-slate-200`}>
              {capsule.reuse_count}
            </span>
          </li>
          <li>
            Water landings:{" "}
            <span class={`text-slate-200`}>
              {capsule.water_landings}
            </span>
          </li>
          <li>
            land langing:{" "}
            <span class={`text-slate-200`}>
              {capsule.land_landings}
            </span>
          </li>

          <li class="text-center">
            Launches:{" "}
            <span class={`text-slate-200`}>
              {
                capsule.launches.map
                  ? capsule.launches.map((launch) => (
                      <Link to={`/launches/${launch}`} self={true}>
                        {launch}
                      </Link>
                    ))
                  : "N/A"
              }
            </span>
          </li>
        </ul>
      </div>
    </div>
  </div>
</Layout>
